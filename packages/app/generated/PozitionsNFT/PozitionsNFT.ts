// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get depositer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PositionClose extends ethereum.Event {
  get params(): PositionClose__Params {
    return new PositionClose__Params(this);
  }
}

export class PositionClose__Params {
  _event: PositionClose;

  constructor(event: PositionClose) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get position(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PositionOpen extends ethereum.Event {
  get params(): PositionOpen__Params {
    return new PositionOpen__Params(this);
  }
}

export class PositionOpen__Params {
  _event: PositionOpen;

  constructor(event: PositionOpen) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get margin(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get market(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get position(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get withdrawer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PozitionsNFT extends ethereum.SmartContract {
  static bind(address: Address): PozitionsNFT {
    return new PozitionsNFT("PozitionsNFT", address);
  }

  depositMarginAndOpenPosition(
    _margin: BigInt,
    _size: BigInt,
    _market: Bytes
  ): Address {
    let result = super.call(
      "depositMarginAndOpenPosition",
      "depositMarginAndOpenPosition(uint256,uint256,bytes32):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_margin),
        ethereum.Value.fromUnsignedBigInt(_size),
        ethereum.Value.fromFixedBytes(_market)
      ]
    );

    return result[0].toAddress();
  }

  try_depositMarginAndOpenPosition(
    _margin: BigInt,
    _size: BigInt,
    _market: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "depositMarginAndOpenPosition",
      "depositMarginAndOpenPosition(uint256,uint256,bytes32):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_margin),
        ethereum.Value.fromUnsignedBigInt(_size),
        ethereum.Value.fromFixedBytes(_market)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  depositsByWalletAddress(param0: Address): BigInt {
    let result = super.call(
      "depositsByWalletAddress",
      "depositsByWalletAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_depositsByWalletAddress(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "depositsByWalletAddress",
      "depositsByWalletAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  openPosition(_margin: BigInt, _size: BigInt, _market: Bytes): Address {
    let result = super.call(
      "openPosition",
      "openPosition(uint256,uint256,bytes32):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_margin),
        ethereum.Value.fromUnsignedBigInt(_size),
        ethereum.Value.fromFixedBytes(_market)
      ]
    );

    return result[0].toAddress();
  }

  try_openPosition(
    _margin: BigInt,
    _size: BigInt,
    _market: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "openPosition",
      "openPosition(uint256,uint256,bytes32):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_margin),
        ethereum.Value.fromUnsignedBigInt(_size),
        ethereum.Value.fromFixedBytes(_market)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _addressResolver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _positionFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClosePositionCall extends ethereum.Call {
  get inputs(): ClosePositionCall__Inputs {
    return new ClosePositionCall__Inputs(this);
  }

  get outputs(): ClosePositionCall__Outputs {
    return new ClosePositionCall__Outputs(this);
  }
}

export class ClosePositionCall__Inputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }

  get _position(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ClosePositionCall__Outputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositMarginAndOpenPositionCall extends ethereum.Call {
  get inputs(): DepositMarginAndOpenPositionCall__Inputs {
    return new DepositMarginAndOpenPositionCall__Inputs(this);
  }

  get outputs(): DepositMarginAndOpenPositionCall__Outputs {
    return new DepositMarginAndOpenPositionCall__Outputs(this);
  }
}

export class DepositMarginAndOpenPositionCall__Inputs {
  _call: DepositMarginAndOpenPositionCall;

  constructor(call: DepositMarginAndOpenPositionCall) {
    this._call = call;
  }

  get _margin(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _size(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _market(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DepositMarginAndOpenPositionCall__Outputs {
  _call: DepositMarginAndOpenPositionCall;

  constructor(call: DepositMarginAndOpenPositionCall) {
    this._call = call;
  }

  get position(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class OpenPositionCall extends ethereum.Call {
  get inputs(): OpenPositionCall__Inputs {
    return new OpenPositionCall__Inputs(this);
  }

  get outputs(): OpenPositionCall__Outputs {
    return new OpenPositionCall__Outputs(this);
  }
}

export class OpenPositionCall__Inputs {
  _call: OpenPositionCall;

  constructor(call: OpenPositionCall) {
    this._call = call;
  }

  get _margin(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _size(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _market(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class OpenPositionCall__Outputs {
  _call: OpenPositionCall;

  constructor(call: OpenPositionCall) {
    this._call = call;
  }

  get position(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
